<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 配置不需要授权的资源(匿名访问) 也就是不需要权限-->

    <!-- 有授权才可访问 -->
    <security:http auto-config="true" use-expressions="true">

        <!-- 自定义自己的登录-->
        <!--login-processing-url="/sec/login.do" 由框架提供的-->
        <security:form-login login-page="http://localhost:8080/pages/login.html"
                             login-processing-url="/sec/login.do"
                             authentication-success-forward-url="/user/loginSuccess.do"
                             authentication-failure-forward-url="/user/loginFail.do"/>

        <!-- 登出-->
        <security:logout logout-url="/sec/logout.do"
                         logout-success-url="http://localhost:8080/pages/login.html"
                         invalidate-session="true"/>

        <!--访问拒绝处理器(授权失败跳转)-->
        <!--
           csrf：对应CsrfFilter过滤器
           disabled：如果使用自定义登录页面需要关闭此项，否则登录操作会被禁用（403）
         -->
        <security:csrf disabled="true"/>
    </security:http>

    <!-- 使用Spirng IoC构建UserDetailService对象 -->
    <bean class="com.itheima.health.security.SecurityUserDetailsService" id="securityUserDetailsService"/>
    <!--配置密码加密对象-->
    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder"/>

    <!-- 配置认证、权限-->
    <security:authentication-manager>
        <!--
         我们要从数据库动态查询用户信息，就必须按照spring security框架的要求提供一个实现UserDetailsService接口的实现类
         -->
        <security:authentication-provider user-service-ref="securityUserDetailsService">
            <!--<security:user-service>
                &lt;!&ndash;<security:user name="admin" authorities="ROLE_ADMIN" password="{noop}123"/>&ndash;&gt;
                &lt;!&ndash;<security:user name="zhangsan" authorities="ROLE_READER" password="{noop}456"/>&ndash;&gt;
                <security:user name="admin" authorities="ROLE_ADMIN,add,find,update,delete" password="{noop}123"/>
                <security:user name="zhangsan" authorities="ROLE_READER,find" password="{noop}123"/>
                <security:user name="lisi" authorities="ROLE_OMS,add,update" password="{noop}123"/>
            </security:user-service>-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 在spring-security.xml文件中开启权限注解支持 -->
    <security:global-method-security pre-post-annotations="enabled"/>

</beans>